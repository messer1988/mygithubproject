{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как получить список сервисов в Openshift?", "completion": "Команда:\n\noc get svc\n\nДля другого namespace используйте:\n\noc get svc -n my-namespace"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как удалить все остановленные контейнеры Docker?", "completion": "Команда:\n\ndocker container prune\n\nУдаляет все остановленные контейнеры. Добавьте `-f` для подтверждения без запроса:\n\ndocker container prune -f"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как установить Jenkins на Ubuntu?", "completion": "1. Обновите пакеты: `sudo apt update`\n2. Установите Java: `sudo apt install openjdk-11-jdk`\n3. Добавьте ключ Jenkins: `wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -`\n4. Добавьте репозиторий: `echo deb https://pkg.jenkins.io/debian binary | sudo tee /etc/apt/sources.list.d/jenkins.list`\n5. Установите Jenkins: `sudo apt update && sudo apt install jenkins`\n6. Запустите Jenkins: `sudo systemctl start jenkins`"}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как создать новую ветку в Git?", "completion": "Используйте:\n\ngit checkout -b my-feature\n\nЭто создаёт и сразу переключает на новую ветку."}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как работает Ansible?", "completion": "Ansible — это инструмент автоматизации, который использует YAML-файлы (playbooks) для управления серверами. Он работает по SSH без установки агентов на целевые машины. Команды выполняются удалённо с использованием встроенных модулей."}
{"prompt": "Как создать Dockerfile?", "completion": "Пример базового Dockerfile:\nFROM python:3.10-slim\nWORKDIR /app\nCOPY . .\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n\nЭтот файл создаёт образ Python-приложения."}
{"prompt": "Как импортировать внешнюю библиотеку в Go?", "completion": "Сначала добавьте в `go.mod`, затем используйте:\n\nimport \"github.com/some/module\""}
{"prompt": "Как посмотреть список процессов?", "completion": "Используйте команду `ps aux` или `top`. Более удобный вариант — `htop`, если установлен."}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как сменить владельца файла?", "completion": "Команда `chown` меняет владельца файла. Пример:\n\nsudo chown user:group файл.txt"}
{"prompt": "Как объявить функцию в Go?", "completion": "Пример функции:\n\nfunc sayHello(name string) {\n    fmt.Println(\"Hello,\", name)\n}"}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Пример playbook для установки Nginx", "completion": "---\n- hosts: web\n  become: yes\n  tasks:\n    - name: Установить nginx\n      apt:\n        name: nginx\n        state: present\n    - name: Убедиться, что nginx запущен\n      service:\n        name: nginx\n        state: started"}
{"prompt": "Как объявить список в Groovy?", "completion": "Список в Groovy создаётся так:\n\ndef myList = [1, 2, 3, 4]"}
{"prompt": "Как настроить Jenkins job для сборки проекта?", "completion": "Для настройки Jenkins job:\n1. Перейдите в Jenkins → New Item\n2. Введите имя и выберите Freestyle project\n3. В разделе Source Code Management укажите репозиторий\n4. В Build добавьте shell-команду для сборки, например: `./gradlew build`\n5. Сохраните и запустите вручную или настройте триггеры."}
{"prompt": "Как объединить ветки в Git?", "completion": "Сначала переключитесь на нужную ветку (например, `main`):\n\ngit checkout main\n\nЗатем выполните merge:\n\ngit merge feature-branch"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}
{"prompt": "Как написать цикл for в Groovy?", "completion": "Пример:\n\nfor (i in 1..5) {\n    println i\n}"}
{"prompt": "Как подключиться к pod в Openshift?", "completion": "Используйте:\n\noc exec -it pod-name -- /bin/bash"}